오늘부터 백엔드 과정 모의외주 떄 다시  프론트

** 백엔드

- 백엔드 분야의 구성 
1. 서버관리 (오늘 할 거)
2. 데이터베이스 관리
3. 백엔드 개발

데이터 저장과 ㅇ통신 매개체 컴퓨터 - 서버
naver cloud 
AWS등 amazon web service
클라우드 기술 - 여러가지 서버를ㄹ 한 개로 연결해 주는 것.
리눅스 운영체제
운영체재가 없는 컴퓨터는 깡통에 불과
리눅스는 오픈소스라 리눅스의 운영체제를 여러기업에서 개조해서 많이 배포해놓았음
ubuntu사용, 20.04사용
어써의 두번째에서 브라우저 눌러서 비밀번호 파일 설정하고 왼쪽 첫번째창에서 이름 짓고 저장해놓으면 다음애 로드만 하면 됨
login as: 하면 unbuntu누르셈

리눅스는 기본적으로 cli로 그래픽이 없음
처음 들어가면 ~$임 여기서 cd/를 침

cd는 체인지디렉토리의 약자 (리눅스에서 디렉토리=폴더)
/는 최상위 폴더를 얘기함 윈도우기준으로 c드라이브임
진한 파랑은 디렉토리 흰색은 일반파일
물결은 내 문서임 ~$ 슬래시의 내 문ㄴ서
cd ~ 하면 ~$으로 이동 됨.
mkdir은 makedirectory임
touch는 파일을 만드는 명령어
rm은 삭제하는 명령어 
cd ..뒤로가는 명ㄹ령어
ls (lsit)하면 지금 파일의 하위 파일 이름 알려줌
directory는 rm -r(레퍼런스의 약자, 디렉토리 안의 모든 것을 삭제하겠다.)  -f(폴스드, 강제로)라고 써줘야함 

리눅스는 sudo apt update 라는 명령어로 업데이트 수동으로 해줘야함
sudo apt ungrade해서 업데이트 해줌

-------------------------------서버 구축 완료



1. 서버 호스팅
2. 서버 다루는 방법
3. 웹 서버 구축

절대 까먹지 마세요
aio
서버 vs 웹서버 
ㄴ 통신, 데이터 저장의 중앙 매개체인 것은 서로 동일
ㄴ 서버 : TCP 통신
ㄴ 웹 서버 : HTTP 통신을 지원 
웹이라는 플랫폼 자체가 http 통신만 지원을 함 그래서 웹 서버 구축이 필수적임
물론 요즘에는 HTTP를 앱에서도 쓰고 다른곳에서도 씀


사실 깡으로 구축하는 것 어려움
ㄴ WAS 프로그램 : 웹 서버 구축을 대신 해주는 프로그램
ㄴ 웹 서버 구축이 매우 간단해짐 (단순히 설치만 하면 끝)
ㄴ 깡으로 구축할 때 보다 동작 속도가 느림, 내 입맛대로 커스텀이 사실상 어려움

WAS는 다양한 종류가 존재
ㄴ 백엔드 언어를 뭘 쓸꺼냐에 따라서, WAS가 정해짐
ㄴ JSP >> Tomcat
ㄴ 자바를 설치해줘야 함 
ㄴ 언어를 같이 설치해줘야함 
ㄴ 리눅스는 직접 설치해야함 
ㄴ java로 개발 된 Tomcat설치

sudo apt install openjdk-8-jdk
(sudo는 관리자 권한으로 라는 뜻, 원래는 비밀번호를 물어봄, 아무대나 붙이면 큰일남)
(apt는 리눅스에서 사용하는 프로그램 관리 명령어, install, update, upgrade 등에 사용하는 명령어)
ㄴ apt install 하면 openjdk가 미국의 서버에 설치 됨 그래서 간편함
(openjdk-8-jdk는 프로그램 시리얼 넘버, 자바 8버전)

vi 는 윈도우로 치면 메모장
시스템 파일은 앞에 sudo를 붙여준다.
읽기 모드 상태에선 환경변수 설정을 못 함
aio가 있음
ㄴa: 커서다음칸 부터 쓰기
ㄴi: 커서부터 쓰기
ㄴo: 커서의 다음줄부터 쓰기
esc누르고(읽기모드) :wq하면 저장됨

서버를 끈다는 건 리스크 
파일단위로 껐다키는 명령어 source 
java -version 을 쳐서 정상적으로 깔렸는지 확인

tomcat설치
tomcat사이트에서 다운로드-tomcat9-core-tar.gz 우클릭-링크주소복사 후 서버에 wget치고 우클릭으로 붙여넣기
빨간색 파일은 압축파일임 압축해제하는 명령어 : tar (-zxvf랑 같이 씀, 압축해제 경과 출력, 끊기면 이어서 해달라)

configure tomcat을 설정하는 폴더
binary tomcat을 실행하는 폴더
lib tomcat에 추가적으로 무언가 설치하는 폴더
webapps에 코드파일들이 저장됨 
녹색파일은 실행파일임 
./startup.sh치면 실행파일 실행됨 (./는 현재파일이란 뜻)
http에 접속이 가능하다!
startup shutdown
8080은 톰캣의 포트임
rm -r -f ./* 에서 *은 모든 파일이라는 의미

ssh (Secure Shell의 줄임말) - 원격 호스트에 접속하기 위해 사용되는 보안 프로토콜
프로토콜 - 컴퓨터 내부에서, 또는 컴퓨터 사이에서 데이터의 교환 방식을 정의하는 규칙 체계

하이퍼텍스트 전송 프로토콜(HTTP)은 월드 와이드 웹의 토대이며 하이퍼텍스트 링크를 사용하여 웹 페이지를 로드하는 데 사용됩니다. HTTP는 네트워크 장치 간에 정보를 전송하도록 설계된 애플리케이션 계층 프로토콜이며 네트워크 프로토콜 스택의 다른 계층 위에서 실행됨

HTTP는 클라이언트와 서버 사이에 이루어지는 요청/응답(request/response) 프로토콜

vi 는 메모장

aws는 기본적으로 모든 포트를 막음 보안상의 문제로

과제 1번째 지역 한국으로 바꾸고 
오늘 했던 내용 그대로 복습해서 새로운 서버 만들어오세요
기존의 미국서버는 삭제해오기

2번째 css신경쓰지말고 대충 메인페이지 만들어서 간단하게 이름 소개
필수적으로 버튼 4개 각 버튼이 1,2,3,4주차 과제로 이동하는 버튼
퍄 
3번째 파일질라 그 프로그램이 뭔지 알아오기 두 번째 과제를 서버에 배포해오면 된다.
다음주 과제검사할 때는 서버 ip접속해서 확인할 것



각각 순서대로 왼쪽, 아래, 오른쪽, 위쪽을 그려준다.
- 'x축 position / y축 position / 색상' 혹은 '가로 위치 / 세로 위치 / 색상' 
